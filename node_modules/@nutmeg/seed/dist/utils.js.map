{"version":3,"file":"utils.js","sourceRoot":"src/","sources":["utils.ts"],"names":[],"mappings":"AAAA,qCAAqC;AACrC,MAAM,UAAU,yBAAyB,CAAC,IAAY;IACpD,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;AACnE,CAAC;AAED,qCAAqC;AACrC,MAAM,UAAU,yBAAyB,CAAC,IAAY;IACpD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACtB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;KAC3E;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAED,+BAA+B;AAC/B,MAAM,UAAU,mBAAmB,CAAC,IAAY;IAC9C,OAAO,KAAK,IAAI,EAAE,CAAC;AACrB,CAAC","sourcesContent":["/** Convert `fooBar` to `foo-bar`. */\nexport function attributeNameFromProperty(name :string): string {\n  return name.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\n}\n\n/** Convert `foo-bar` to `fooBar`. */\nexport function propertyNameFromAttribute(name :string): string {\n  if (name.includes('-')) {\n    return name.toLowerCase().replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n  } else {\n    return name;\n  }\n}\n\n/** Convert `foo` to `_foo`. */\nexport function privatePropertyName(name :string): string {\n  return `__${name}`;\n}\n"]}