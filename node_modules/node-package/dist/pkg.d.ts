export declare type InstallSource = 'npm' | 'git' | 'unpkg';
export declare const DEFAULT_INSTALL_SOURCE: InstallSource;
export interface InstallCommand {
    command: string;
    id: InstallSource;
}
export declare class Pkg {
    private data;
    constructor(data: PackageData);
    get description(): string;
    get git(): string;
    get keywords(): string[];
    get license(): string;
    installCommands(global: boolean): InstallCommand[];
    get name(): string;
    get types(): string;
    get version(): string;
    get unpkg(): string;
    private get dirtyKeywords();
    private get webpath();
}
export interface PackageData {
    author?: string | PersonData;
    bin?: string | {
        [index: string]: string;
    };
    bugs?: string | BugsData;
    bundledDependencies?: DependenciesData;
    config?: ConfigData;
    contributors?: Array<string | PersonData>;
    cpu?: string[];
    dependencies?: DependenciesData;
    description?: string;
    devDependencies?: DependenciesData;
    directories?: DirectoriesData;
    engines?: EnginesData;
    files?: string[];
    homepage?: string;
    keywords?: string[] | string;
    license?: string | DeprecatedLicenseData;
    main?: string;
    man?: string | string[];
    name: string;
    optionalDependencies?: DependenciesData;
    os?: string[];
    peerDependencies?: DependenciesData;
    private?: boolean;
    publishConfig?: ConfigData;
    repository?: string | RepositoryData;
    scripts?: {
        [index: string]: string;
    };
    version: string;
    browser?: string;
    readmeFilename?: string;
    types?: string;
    typings?: string;
    unpkg?: string;
    webpack?: string;
}
export interface BugsData {
    url?: string;
    email?: string;
}
export interface DeprecatedLicenseData {
    type: string;
    url: string;
}
export interface PersonData {
    name: string;
    email?: string;
    url?: string;
}
export interface DirectoriesData {
    lib?: string;
    bin?: string;
    man?: string;
    doc?: string;
    example?: string;
    test?: string;
}
export interface RepositoryData {
    type: string;
    url: string;
}
export interface DependenciesData {
    [index: string]: string;
}
export interface EnginesData {
    node: string;
    npm?: string;
}
export interface ConfigData {
    [index: string]: string;
}
