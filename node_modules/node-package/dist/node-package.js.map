{"version":3,"file":"node-package.js","sourceRoot":"src/","sources":["node-package.ts"],"names":[],"mappings":"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","sourcesContent":["import { Failure, fold, Initialized, Pending, RemoteData, Success } from '@abraham/remotedata';\nimport { html, property, Seed, svg, TemplateResult } from '@nutmeg/seed';\nimport { Api } from './api';\nimport { FailureView } from './failure.view';\nimport { PendingView } from './pending.view';\nimport { DEFAULT_INSTALL_SOURCE, InstallSource, Pkg } from './pkg';\nimport { SuccessView } from './success.view';\n\ninterface SuccessData {\n  pkg: Pkg,\n  selectedTab: InstallSource,\n}\n\ntype State = RemoteData<string, SuccessData>;\n\nexport class NodePackage extends Seed {\n  @property({ type: Boolean }) public global: boolean = false;\n  @property({ type: String }) public name?: string;\n\n  private api = new Api();\n  private state: State = new Initialized();\n\n  constructor() {\n    super();\n  }\n\n  /** The component instance has been inserted into the DOM. */\n  public connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /** The component instance has been removed from the DOM. */\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n  }\n\n  /** Watch for changes to these attributes. */\n  public static get observedAttributes(): string[] {\n    return super.observedAttributes;\n  }\n\n  /** Rerender when the observed attributes change. */\n  public attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n  }\n\n  /** Styling for the component. */\n  public get styles(): TemplateResult {\n    return html`\n      <style>\n        /** Global */\n        :host {\n          width: 100%;\n          border: 1px solid var(--node-package-background-color, #dadce0);\n          border-radius: 8px;\n          overflow: hidden;\n        }\n\n        .fixed-width {\n          font-family: Consolas, Courier, Courier New, Lucida Console, Monaco;\n        }\n\n        .hidden {\n          display: none;\n        }\n\n        .row-horizontal {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n        }\n\n        #content {\n          font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n          background-color: var(--node-package-background-color, #fff);\n          color: var(--node-package-color, #202124);\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          height: 340px;\n          overflow: hidden;\n        }\n\n        #header h1 {\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        #header a {\n          color: var(--node-package-color, #202124);\n          text-decoration: none;\n        }\n\n        #logo {\n          height: 38px;\n          width: auto;\n        }\n\n        /** Success */\n        #description {\n          max-height: 3em;\n        }\n\n        #keywords {\n          margin-right: 8px;\n        }\n\n        .ellipsis {\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n\n        #install {\n          padding: 0;\n        }\n\n        #commands {\n          background-color: var(--node-package-color, #dadce0);\n          color: var(--node-package-background-color, #202124);\n          padding: 16px;\n        }\n\n        #commands input::selection {\n          color: var(--node-package-color, #dadce0);\n          background-color: var(--node-package-background-color, #202124);\n        }\n\n        #commands svg {\n          fill: var(--node-package-background-color, #202124);\n        }\n\n        .command {\n          border: none;\n          color: var(--node-package-background-color, #202124);\n          background-color: var(--node-package-color, #dadce0);\n          width: 100%;\n          height: 24px;\n          font-size: 16px;\n          outline: none;\n          margin-right: 16px;\n        }\n\n        #tabs {\n          padding: 0 0 0 16px;\n          display: flex;\n          flex-direction: row;\n        }\n\n        .tab {\n          background-color: var(--node-package-background-color, #fff);\n          padding: 12px 24px 8px 24px;\n          color: var(--node-package-link-color, #CB3837);\n          text-decoration: none;\n          text-transform: uppercase;\n          border-bottom: var(--node-package-color, #dadce0) solid 0;\n          transition: border 100ms ease-in-out;\n        }\n\n        .tab label {\n          cursor: pointer;\n        }\n\n        .tab.selected, .tab:hover {\n          border-bottom-width: 3px;\n          transition: border 100ms ease-in-out;\n        }\n\n        h1 {\n          margin: 0;\n        }\n\n        .row {\n          margin: 0;\n          padding: 16px;\n        }\n\n        #keywords a {\n          color: var(--node-package-link-color, #CB3837);\n          text-decoration: none;\n        }\n\n        #keywords a:hover {\n          text-decoration: underline;\n        }\n\n        #toast-wrapper {\n          text-align: center;\n          height: 0;\n        }\n\n        #toast {\n          font-size: 12px;\n          position: relative;\n          bottom: -24px;\n          padding: 8px 16px;\n          border-radius: 24px;\n          color: var(--node-package-background-color, #fff);\n          background-color: var(--node-package-color, #202124);\n          transition: bottom 300ms ease-in-out;\n        }\n\n        #toast.copied {\n          bottom: 36px;\n          transition: bottom 300ms ease-in-out;\n        }\n\n        /** Pending */\n        #pending {\n          font-size: 24px;\n        }\n\n        /** Failure */\n        #error {\n          font-size: 24px;\n        }\n      </style>\n    `;\n  }\n\n  public get logo(): TemplateResult {\n    return svg`\n      <svg id=\"logo\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"540px\" height=\"210px\" viewBox=\"0 0 18 7\">\n        <path fill=\"#CB3837\" d=\"M0,0h18v6H9v1H5V6H0V0z M1,5h2V2h1v3h1V1H1V5z M6,1v5h2V5h2V1H6z M8,2h1v2H8V2z M11,1v4h2V2h1v3h1V2h1v3h1V1H11z\"/>\n        <polygon fill=\"#fff\" points=\"1,5 3,5 3,2 4,2 4,5 5,5 5,1 1,1 \"/>\n        <path fill=\"#fff\" d=\"M6,1v5h2V5h2V1H6z M9,4H8V2h1V4z\"/>\n        <polygon fill=\"#fff\" points=\"11,1 11,5 13,5 13,2 14,2 14,5 15,5 15,2 16,2 16,5 17,5 17,1 \"/>\n      </svg>\n    `;\n  }\n\n  private get header(): TemplateResult {\n    if (this.name) {\n      return html`\n        <div id=\"header\" class=\"row row-horizontal\">\n          <h1 class=\"item\">\n            <a href=\"https://npmjs.com/package/${this.name}\" target=\"_blank\" rel=\"noopener\" title=\"Open ${this.name} on NPM\">${this.name}</a>\n          </h1>\n          <span class=\"item\">\n            <a href=\"https://npmjs.com/package/${this.name}\" target=\"_blank\" rel=\"noopener\" title=\"Open ${this.name} on NPM\">${this.logo}</a>\n          </span>\n        </div>\n      `;\n    } else {\n      return html`\n        <div id=\"header\" class=\"row row-horizontal\">\n          <span class=\"item\"></span>\n          <span class=\"item\">\n            ${this.logo}\n          </span>\n        </div>\n      `;\n    }\n  }\n\n  /** HTML Template for the component. */\n  public get template(): TemplateResult {\n    return html`\n      <div id=\"content\">\n        ${this.header}\n        ${this.view(this.state)}\n      </div>\n    `;\n  }\n\n  public set selectedTab(tab: InstallSource) {\n    if (this.state instanceof Success) {\n      this.state.data.selectedTab = tab;\n    }\n  }\n\n  private pendingHandler(): TemplateResult {\n    return new PendingView().content;\n  }\n\n  private initializedHandler(): TemplateResult {\n    if (this.name) {\n      this.fetchPackage();\n      return this.pendingHandler()\n    } else {\n      return new FailureView('Missing required value \"name\"').content;\n    }\n  }\n\n  private errorHandler(error: string): TemplateResult {\n    if (this.updateData) { this.fetchPackage(); }\n    return new FailureView(error).content;\n  }\n\n  private successHandler(data: SuccessData): TemplateResult {\n    if (this.updateData) { this.fetchPackage(); }\n    return new SuccessView(this, data.pkg, data.selectedTab).content;\n  }\n\n  private get view(): (state: State) => TemplateResult {\n    return fold<TemplateResult, string, SuccessData>(\n      () => this.initializedHandler(),\n      () => this.pendingHandler(),\n      (error: string) => this.errorHandler(error),\n      (data: SuccessData) => this.successHandler(data),\n    );\n  }\n\n  private async fetchPackage(): Promise<void> {\n    if (this.name) {\n      this.state = new Pending();\n      try {\n        const pkg = new Pkg(await this.api.fetch(this.name));\n        this.state = new Success({ selectedTab: DEFAULT_INSTALL_SOURCE, pkg });\n      } catch (error) {\n        this.state = new Failure(error);\n      }\n      this.render();\n    }\n  }\n\n  private get updateData(): boolean {\n    return this.state instanceof Success && this.state.data.pkg.name !== this.name;\n  }\n}\n\nwindow.customElements.define('node-package', NodePackage);\n"]}