export const DEFAULT_INSTALL_SOURCE = 'npm';
export class Pkg {
    constructor(data) {
        this.data = data;
    }
    get description() {
        return this.data.description || '';
    }
    get git() {
        if (typeof this.data.repository === 'object' && this.data.repository.type === 'git') {
            return this.data.repository.url;
        }
        else {
            return '';
        }
    }
    get keywords() {
        return this.dirtyKeywords.map(keyword => keyword.trim());
    }
    get license() {
        if (typeof this.data.license === 'string') {
            return this.data.license;
        }
        else {
            return '';
        }
    }
    installCommands(global) {
        const commands = [
            {
                command: `npm install ${this.name}${global ? ' --global' : ''}`,
                id: 'npm',
            }
        ];
        if (this.git) {
            commands.push({
                command: `git clone ${this.git}`,
                id: 'git',
            });
        }
        if (this.unpkg) {
            commands.push({
                command: `<script async src="${this.unpkg}"></script>`,
                id: 'unpkg',
            });
        }
        return commands;
    }
    get name() {
        return this.data.name;
    }
    get types() {
        return this.data.types || this.data.typings || '';
    }
    get version() {
        return this.data.version;
    }
    get unpkg() {
        return this.webpath ? new URL(`${this.name}/${this.webpath}`, 'https://unpkg.com/').href : '';
    }
    get dirtyKeywords() {
        if (!this.data.keywords) {
            return [];
        }
        if (typeof this.data.keywords === 'string') {
            return this.data.keywords.split(',');
        }
        return this.data.keywords;
    }
    get webpath() {
        if (!!this.data.unpkg) {
            return this.data.unpkg;
        }
        else if (!!this.data.browser) {
            return this.data.browser;
        }
        else if (!!this.data.main) {
            return this.data.main;
        }
        else if (!!this.data.webpack) {
            return this.data.webpack;
        }
        else {
            return '';
        }
    }
}
//# sourceMappingURL=pkg.js.map